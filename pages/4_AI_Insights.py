import streamlit as st
import utils 

# --- State Management and Sidebar ---
# This block MUST be at the top of every page script
st.markdown(utils.load_css(), unsafe_allow_html=True)

# Initialize state keys if they don't exist
if 'loaded_sheet' not in st.session_state:
    st.session_state.loaded_sheet = None

utils.add_sidebar() # Draws the sidebar and populates st.session_state.selected_sheet

# The definitive check: reload if the selected sheet is different from the loaded one
if st.session_state.selected_sheet != st.session_state.loaded_sheet:
    utils.initialize_app(st.session_state.selected_sheet)

# Final check for data loading before page content
if st.session_state.get('df_enhanced') is None:
    st.warning("Data could not be loaded. Please select a valid worksheet from the sidebar.")
    st.stop()

# Get the dataframe and models from session state
df = st.session_state.df_enhanced
models = st.session_state.models
st.header("ðŸ¤– AI-Powered Insights")
st.write("This section provides automated insights generated by analyzing the entire dataset and machine learning model performance.")

insights = utils.generate_insights(df)

if 'outcome_model' in models:
    model, le, accuracy, _ = models['outcome_model']
    st.markdown(f"""
    <div class="insight-box">
        <h4>Game Outcome Prediction Model</h4>
        <p>The AI model trained to predict whether a game is a 'Win' or 'Loss' based on player stats achieves <strong>{accuracy:.1%} accuracy</strong> on unseen test data. This indicates a strong relationship between in-game performance metrics and the final outcome.</p>
    </div>
    """, unsafe_allow_html=True)

for insight in insights:
    st.markdown(f"""
    <div class="insight-box">
        <p>{insight}</p>
    </div>
    """, unsafe_allow_html=True)